# ==================================================
# === ATOMIKOS TRANSACTION MANAGER CONFIGURATION ===
# ==================================================

#Required: factory implementation class of the transaction core.
com.atomikos.icatch.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory

com.atomikos.icatch.lock_logs=false

com.atomikos.icatch.force_shutdown_on_vm_exit=true
	    
#Set base name of log file this name will be  used as the first part of the system-generated log file name
com.atomikos.icatch.log_base_name = tmlog

#Set base name of file where messages are output (also known as the 'console file').
com.atomikos.icatch.console_file_name = tm.out

#Set output directory where console file and other files are to be put make sure this directory exists!
com.atomikos.icatch.output_dir = tm/jta

#Set directory of log files; make sure this directory exists!
com.atomikos.icatch.log_base_dir = tm/log

#Set the max timeout (in milliseconds) for local transactions
com.atomikos.icatch.max_timeout = 30000000

#The globally unique name of this transaction manager process override this value with a globally unique name
com.atomikos.icatch.tm_unique_name = lift_tm

#Set this to WARN, INFO or DEBUG to control the granularity of output to the console file.
com.atomikos.icatch.console_log_level=DEBUG
	
#Do you want transaction logging to be enabled or not? If set to false, then no logging overhead will be done at the risk of losing data after restart or crash.
com.atomikos.icatch.enable_logging=false

#Should two-phase commit be done in (multi-)threaded mode or not? NOTE: threads are reused on JDK 1.5 or higher. For JDK 1.4, thread reuse is enabled as soon as the concurrent backport is in the classpath.
com.atomikos.icatch.threaded_2pc=true
	
#Do we want to use parallel subtransactions? JTA's default is NO for J2EE compatibility
#com.atomikos.icatch.serial_jta_transactions=true
                    
#If you want to do explicit resource registration then you need to set this value to false.
#com.atomikos.icatch.automatic_resource_registration=true  
	
#Set the max number of active local transactions or -1 for unlimited.
#com.atomikos.icatch.max_actives = 50

#Size limit (in bytes) for the console file; negative means unlimited.
#com.atomikos.icatch.console_file_limit=-1

#For size-limited console files, this option specifies a number of rotating files to maintain.
#com.atomikos.icatch.console_file_count=1

#Set the number of log writes between checkpoints
#com.atomikos.icatch.checkpoint_interval=500

